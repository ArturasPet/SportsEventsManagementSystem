@model SportBook.ViewModels.EventData

@{
    ViewData["Title"] = "Team Event";
    Layout = "~/Views/Shared/_EsportsLayout.cshtml";
    var currentUser = ViewData["CurrentUser"] as SportBook.Models.User;
    var team = ViewData["eventTeam"] as SportBook.Models.Team;
    var teamMembers = ViewData["teamMembers"] as IEnumerable<SportBook.Models.TeamMember>;
    var pCount = (int)ViewData["pCount"];
    var teams = ViewData["Teams"] as IEnumerable<SportBook.Models.Team>;
    var enemyTeam = ViewData["enemyTeam"] as SportBook.Models.Team;
    var teamId = 0;
    if (pCount > 1)
    {
        teamId = enemyTeam.TeamId;
    }
}

@if ((bool)ViewData["isFailed"] == true)
{
    <script type="text/javascript">
        $(window).on('load', function () {
            $('#editModal').modal('show');
        });
    </script>
}
<style>
    .card {
        background-color: #d39c59 !important;
    }
</style>
<div class="d-flex">
    <h1>Scrim details</h1>
    <div class="ml-auto mr-5">
        @if (currentUser.UserId == Model.Event.FkOwner)
        {
            <a class="btn btn-secondary" data-toggle="modal" data-target="#deleteModal"><i class="fa fa-trash-alt" style="color:white; isolation: isolate;"></i></a>
            <a class="btn btn-secondary ml-2" data-toggle="modal" data-target="#editModal"><i class="fa fa-edit" style="color:white; isolation: isolate;"></i></a>
        }
        @if (pCount == 1)
        {
            @if (!teamMembers.Any(x => x.FkUser == currentUser.UserId))
            {
                <a class="btn btn-secondary ml-2" data-toggle="modal" id="bothModalElement" data-target="#joinModal"><i class="fa fa-plus" style="color:white; isolation: isolate;"></i></a>
            }
        }
        else
        {
            var enemyTeamMembers = ViewData["enemyMembers"] as IEnumerable<SportBook.Models.TeamMember>;
            @if (enemyTeamMembers.Any(x => x.FkUser == currentUser.UserId))
            {
                <a class="btn btn-secondary ml-2" data-toggle="modal" id="bothModalElement" data-target="#quitModal"><i class="fa fa-user-minus" style="color:white; isolation: isolate;"></i></a>
            }
        }
        <a asp-action="Esports" class="btn btn-secondary ml-2"><i class="fa fa-list" style="color:white; isolation: isolate;"></i></a>
    </div>
</div>
<div class="modal " id="joinModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Select team for scrim</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <div class="p-2">
                    @Html.DropDownList("SelectedTeam", new SelectList(teams, "TeamId", "Name"), new { @class = "form-control" })

                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <input type="submit" id="joinModalSubmit" value="Join" class="btn btn-secondary" />
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal " id="quitModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Leave scrim</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <div class="p-2">
                    Are you sure you want to leave <b>@Model.Event.Title</b>?
                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <input type="submit" id="quitModalSubmit" value="Leave" class="btn btn-outline-danger" />
                </div>
            </div>
        </div>
    </div>
</div>
<form id="eventForm" asp-action="Edit" asp-route-id="@Model.Event.EventId">
    <div class="modal" id="editModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Edit team</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Event.Title" class="control-label"></label>
                        <input asp-for="Event.Title" class="form-control" />
                        <span asp-validation-for="Event.Title" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Event.MaxParticipantAmt" class="control-label"></label>
                        <input asp-for="Event.MaxParticipantAmt" class="form-control" />
                        <span asp-validation-for="Event.MaxParticipantAmt" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Event.StartTime" class="control-label"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button type="button" id="toggle" class="input-group-text"><i class="fa fa-calendar-alt"></i></button>
                            </div>
                            <input type="text" asp-for="Event.StartTime" id="datepicker" class="form-control" />
                        </div>
                        <span asp-validation-for="Event.StartTime" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Event.EndTime" class="control-label"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button type="button" id="toggle2" class="input-group-text"><i class="fa fa-calendar-alt"></i></button>
                            </div>
                            <input type="text" asp-for="Event.EndTime" id="datepicker2" class="form-control" />
                        </div>
                        <span asp-validation-for="Event.EndTime" class="text-danger"></span>
                    </div>
                    <input type="hidden" asp-for="Event.IsPrivate" />
                    <input type="hidden" asp-for="Event.IsTeamEvent" />
                    <input type="hidden" asp-for="Event.FkGameType" />
                    <input type="hidden" asp-for="Event.FkOwner" />
                    <input type="hidden" asp-for="Event.EventId" />
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <input type="submit" value="Edit" class="btn btn-secondary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<form id="deleteForm" asp-action="Delete" asp-route-id="@Model.Event.EventId">
    <div class="modal " id="deleteModal">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Delete team</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <div class="p-2 text-center">
                        Are you sure you want to delete <b>@Model.Event.Title</b>?

                    </div>
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <input type="submit" value="Delete" class="btn btn-outline-danger" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


<div>
    <hr />
    <div class="row" name="navBar">
        <div class="flex-column col-md-8 col-xl-6 col-sm-8">
            <div class="row">
                <div class="p-2 font-weight-bold ml-3 flex-column col-md-4">
                    @Html.DisplayNameFor(model => model.Event.Title):
                </div>
                <div class="p-2 flex-column ml-3">
                    @Html.DisplayFor(model => model.Event.Title)
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="p-2 font-weight-bold ml-3 flex-column col-md-4">
                    Event time:
                </div>
                <div class="p-2 flex-column ml-3">
                    @Html.DisplayFor(model => model.Event.StartTime) - @Html.DisplayFor(model => model.Event.EndTime)
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="p-2 font-weight-bold ml-3 flex-column col-md-4">
                    @Html.DisplayNameFor(model => model.Event.FkGameTypeNavigation):
                </div>
                <div class="p-2 flex-column ml-3">
                    @Html.DisplayFor(model => model.Event.FkGameTypeNavigation.Name)
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="p-2 font-weight-bold ml-3 flex-column col-md-4">
                    Event creator:
                </div>
                <div class="p-2 flex-column ml-3">
                    @team.Name
                </div>
            </div>
            <hr />
        </div>

        <div class="flex-column col-md-12 col-xl-6">
            <div class="row mr-3 p-2">



                <div class="flex-column col-md-4 col-sm-4 text-center">
                    <h2>@team.Name</h2>
                    <ul class="list-group-flush">
                        @foreach (var item in teamMembers)
                        {
                        <li class="list-group-item text-left" style="background-color:transparent;">
                            <img class="img-fluid rounded-circle mb-1 mr-1" style="max-height:30px;max-width:30px" src="@item.FkUserNavigation.PictureUrl" />
                            @item.FkUserNavigation.Username
                        </li>
                        }
                    </ul>
                </div>

                <div class="p-2 flex-column align-self-center"><h3>VS</h3></div>

                <div class="flex-column col-md-4 col-sm-4 text-center" id="enemyTeamList">
                    @if (pCount > 1)
                    {
                        var enemyTeamMembers = ViewData["enemyMembers"] as IEnumerable<SportBook.Models.TeamMember>;
                        <h2>@enemyTeam.Name</h2>
                        <ul class="list-group-flush" id="participantList">
                            @foreach (var item in enemyTeamMembers)
                            {
                            <li class="list-group-item text-left" style="background-color:transparent;">
                                <img class="img-fluid rounded-circle mb-1 mr-1" style="max-height:30px;max-width:30px" src="@item.FkUserNavigation.PictureUrl" />
                                @item.FkUserNavigation.Username
                            </li>
                            }
                        </ul>
                        @if (currentUser.UserId == Model.Event.FkOwner) //isOwner
                        {
                            <a class="btn btn-secondary ml-auto mr-2 removeMember"><i class="fa fa-user-slash" style="color:white; isolation:isolate;"></i></a>
                        }
                    }

                </div>
            </div>
        </div>
    </div>
</div>

@*@if (!Model.Participants.Any(x => x.FkUser == currentUser.UserId) && Model.Event.MaxParticipantAmt > Model.Participants.Count)
    {
        <div class="text-center">
            <div class="col align-content-lg-center text-center">
                <div class="flex-row p-2" id="joinLeaveText">
                    You have been invited to join this team
                </div>

                <div class="flex-row p-2">
                    <input id="joinLeaveBtn" type="button" onclick="joinEvent()" value="Join" class="btn btn-success" />
                </div>

            </div>

        </div>
    }
    else if (Model.Participants.Any(x => x.FkUser == currentUser.UserId) && currentUser.UserId != Model.Event.FkOwner)
    {
        <div class="text-center">
            <div class="col align-content-lg-center text-center">
                <div class="flex-row p-2" id="joinLeaveText">
                    Are you sure you want to leave?
                </div>

                <div class="flex-row p-2">
                    <input id="joinLeaveBtn" type="button" onclick="leaveEvent()" value="Leave" class="btn btn-danger" />
                </div>

            </div>
        </div>
    }*@
<div class="row">
    <div id="chat" class="col-xl-4 col-md-8 col-sm-10 p-2 m-2 ml-md-4 m-sm-auto ml-lg-4">
        @await Component.InvokeAsync("Chatroom", new { chatGroup = ("event_" + Model.Event.EventId) })
    </div>
</div>
@*<div id="chat" class="ml-3 w-50" name="navBar">
    @await Component.InvokeAsync("Chatroom", new { chatGroup = ("event_" + Model.Event.EventId) })
</div>*@

<script src="~/lib/jquery-datetimepicker/jquery.datetimepicker.full.min.js"></script>

<script>

    $('#joinModalSubmit').on('click', function () {
        var teamId = $('#SelectedTeam').find(":selected").val();


            var link = "@Url.Action("TeamEventEnemyVC", "Esports", new { eventId = Model.Event.EventId , teamId = "-1" })";
            link = link.replace("-1", teamId);
            link = link.replace("amp;", "");
            $("#enemyTeamList").load(link, function () { });
            $('#joinModal').modal('hide');
        $('#bothModalElement').attr('data-target', '#quitModal');
        $('#bothModalElement i').removeClass();
        $('#bothModalElement i').addClass('fa fa-user-minus');
    });
    $('#quitModalSubmit').on('click', function () {

        var teamId = '@teamId';

        var link = "@Url.Action("TeamEventEnemyVC", "Esports", new { eventId = Model.Event.EventId , teamId = "-1" })";
        link = link.replace("-1", teamId);
        link = link.replace("amp;", "");
        $("#enemyTeamList").load(link, function () { });
        $('#quitModal').modal('hide');
        $('#bothModalElement').attr('data-target', '#joinModal');
        $('#bothModalElement i').removeClass();
        $('#bothModalElement i').addClass('fa fa-plus');

    });

    $('body').on('click', '.removeMember', function () { RemoveEventMember($(this)); return false;});

    function RemoveEventMember(data) {
        var teamId = '@teamId';
        var link = "@Url.Action("TeamEventEnemyVC", "Esports", new { eventId = Model.Event.EventId, teamId = "-1" })";
        link = link.replace("-1", teamId);
        link = link.replace("amp;", "");
        $("#enemyTeamList").load(link, function () { });
    }

    $('#datepicker').datetimepicker({
        timepicker: true,
        datepicker: true,
        format: 'Y-m-d H:i',
        hours12: false,
        step: 15,
        onShow: function (ct) {
            this.setOptions({
                minDate: new Date(),
                maxDate: $('#datepicker2').val() ? $('#datepicker2').val() : false
            })
        }
    });
    $('#toggle').on('click', function () {
        $('#datepicker').datetimepicker('toggle')
    })

    $('#datepicker2').datetimepicker({
        timepicker: true,
        datepicker: true,
        format: 'Y-m-d H:i',
        hours12: false,
        step: 15,
        onShow: function (ct) {
            this.setOptions({
                minDate: $('#datepicker').val() ? $('#datepicker').val() : false
            })
        }
    });
    $('#toggle2').on('click', function () {
        $('#datepicker2').datetimepicker('toggle')
    })
</script>
