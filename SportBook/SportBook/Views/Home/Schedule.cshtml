
@{
    ViewData["Title"] = "Schedule";
    Layout = null;
    var events = ViewData["events"];

}

    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>

<link href="https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i" rel="stylesheet">
<link rel="stylesheet" href="~/css/Schedule.css" />


<script>
    $(document).ready(function () {
        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();

        /*  className colors

        className: default(transparent), important(red), chill(pink), success(green), info(blue)

        */


        /* initialize the external events
        -----------------------------------------------------------------*/

        $('#external-events div.external-event').each(function () {

            var eventObject = {
                title: $.trim($(this).text()) // use the element's text as the event title
            };

            // store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);

            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });


        /* initialize the calendar
        -----------------------------------------------------------------*/

        var calendar = $('#calendar').fullCalendar({
            header: {
                left: 'title',
                center: 'agendaDay,agendaWeek,month',
                right: 'prev,next today'
            },
            editable: true,
            firstDay: 1, //  1(Monday) this can be changed to 0(Sunday) for the USA system
            selectable: true,
            defaultView: 'month',

            axisFormat: 'h:mm',
            columnFormat: {
                month: 'ddd',    // Mon
                week: 'ddd d', // Mon 7
                day: 'dddd M/d',  // Monday 9/7
                agendaDay: 'dddd d'
            },
            titleFormat: {
                month: 'MMMM yyyy', // September 2009
                week: "MMMM yyyy", // September 2009
                day: 'MMMM yyyy'                  // Tuesday, Sep 8, 2009
            },
            allDaySlot: false,
            selectHelper: true,
            select: function (start, end, allDay) {
                var title = prompt('Event Title:');
                if (title) {
                    calendar.fullCalendar('renderEvent',
                        {
                            title: title,
                            start: start,
                            end: end,
                            allDay: allDay
                        },
                        true // make the event "stick"
                    );
                }
                calendar.fullCalendar('unselect');
            },
            droppable: true, // this allows things to be dropped onto the calendar !!!
            drop: function (date, allDay) { // this function is called when something is dropped

                // retrieve the dropped element's stored Event Object
                var originalEventObject = $(this).data('eventObject');

                // we need to copy it, so that multiple events don't have a reference to the same object
                var copiedEventObject = $.extend({}, originalEventObject);

                // assign it the date that was reported
                copiedEventObject.start = date;
                copiedEventObject.allDay = allDay;

                // render the event on the calendar
                // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

                // is the "remove after drop" checkbox checked?
                if ($('#drop-remove').is(':checked')) {
                    // if so, remove the element from the "Draggable Events" list
                    $(this).remove();
                }

            },
            events: @Html.Raw(Json.Serialize(events)),
        });
        console.log(@Html.Raw(Json.Serialize(events)));

    });</script>
<style>

    body {
        margin-bottom: 40px;
        margin-top: 40px;
        text-align: center;
        font-size: 14px;
        font-family: 'Roboto', sans-serif;
    }

    #external-events {
        float: left;
        width: 150px;
        padding: 0 10px;
        text-align: left;
    }

        #external-events h4 {
            font-size: 16px;
            margin-top: 0;
            padding-top: 1em;
        }

    .external-event { /* try to mimick the look of a real event */
        margin: 10px 0;
        padding: 2px 4px;
        background: green;
        color: #fff;
        font-size: .85em;
        cursor: pointer;
    }

    #external-events p {
        margin: 1.5em 0;
        font-size: 11px;
        color: #666;
    }

        #external-events p input {
            margin: 0;
            vertical-align: middle;
        }

    #calendar {
        /* 		float: right; */
        margin: 0 auto;
        max-width: 1200px;
        background-color: #FFFFFF;
        border-radius: 6px;
        box-shadow: 0 1px 2px #C3C3C3;
        -webkit-box-shadow: 0px 0px 21px 2px rgba(0,0,0,0.18);
        -moz-box-shadow: 0px 0px 21px 2px rgba(0,0,0,0.18);
        box-shadow: 0px 0px 21px 2px rgba(0,0,0,0.18);
    }
</style>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Schedule</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body onload="checkDarkMode()">
    <header>
        @*delete bg-white for header to have darkmode*@
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3">
            @*<div class="container">*@
            <a class="navbar-brand" name="navBar" asp-area="" asp-controller="Home" asp-action="Index">SportBook</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <ul class="navbar-nav flex-grow-1">
                    @if (User.IsInRole("admin"))
                    {
                        <li class="nav-item">
                            <a class="nav-link text-dark" name="navBar" asp-area="" asp-controller="Admin" asp-action="Index">Administration</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <ul class="navbar-nav ml-auto">

                    <li class="nav-item ">



                        @if (User.Identity.IsAuthenticated)
                        {

                            <a id="qsLogoutBtn" class="dropdown-item text-dark" name="navBar" asp-area="" asp-controller="Account" asp-action="Logout">Logout</a>
                        }
                        else
                        {
                            <a id="qsLoginBtn" class="dropdown-item text-dark" name="navBar" asp-area="" asp-controller="Account" asp-action="Login">Login</a>

                        }

                    </li>

                    <li class="nav-item">
                        <div class="toggle toggle--daynight">
                            <input type="checkbox" id="toggle--daynight" class="toggle--checkbox">
                            <label class="toggle--btn" for="toggle--daynight"><span class="toggle--feature"></span></label>
                        </div>
                    </li>
                </ul>
            </div>

            @*</div>*@
        </nav>
    </header>

    <div class="container-fluid">
        <main role="main" class="pb-3">
            <div>

                <div id='calendar'></div>

                <div style='clear:both'></div>
            </div>
        </main>
    </div>


    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2020 - SportBook
        </div>
    </footer>
</body>

<script src="~/js/schedule.js" asp-append-version="true"></script>
<script src="https://cdn.jsdelivr.net/npm/darkmode-js@1.5.5/lib/darkmode-js.min.js"></script>
<script>
    var darkmode = new Darkmode();
    document.getElementById('toggle--daynight').addEventListener('click', function () {
        darkmode.toggle();
        const x = document.getElementsByName("navBar");
        const m = document.getElementById("navDrop");
        if (darkmode.isActivated()) {
            for (let e of x) {
                e.classList.add("text-white");
                e.classList.remove("text-dark");
                m.style.background = "#000000";
            }
        }
        else {
            for (let e of x) {
                e.classList.remove("text-white");
                e.classList.add("text-dark");
                m.style.background = "#FFFFFF";
            }
        }
    });

    function checkDarkMode() {
        const x = document.getElementsByName("navBar");
        const m = document.getElementById("navDrop");
        if (darkmode.isActivated()) {
            for (let e of x) {
                e.classList.add("text-white");
                e.classList.remove("text-dark");
                m.style.background = "#000000";
            }
        }
    }
</script>
