@model SportBook.Models.Event
@{
    ViewData["Title"] = "Create sport event";
    Layout = "~/Views/Shared/_SportsLayout.cshtml";
    var locations = ViewData["Locations"] as List<SportBook.ViewModels.LocationData>;
}
<script src="~/lib/jquery-datetimepicker/jquery.datetimepicker.full.min.js"></script>

<h1>Create Event</h1>
@if (!(Model == null || Model.FkLocation == null))
{
    <script type="text/javascript">
        $(window).on('load', function () {
            $('#myModal').modal('show');
        });
    </script>
}

<form id="eventForm" asp-action="SportsEvents">
    <div class="modal" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Create event</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input id="eventTitle" asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="MaxParticipantAmt" class="control-label"></label>
                        <input asp-for="MaxParticipantAmt" class="form-control" />
                        <span asp-validation-for="MaxParticipantAmt" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="StartTime" class="control-label"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button type="button" id="toggle" class="input-group-text"><i class="fa fa-calendar-alt"></i></button>
                            </div>
                            <input type="text" asp-for="StartTime" id="datepicker" class="form-control" />
                        </div>
                        <span asp-validation-for="StartTime" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="EndTime" class="control-label"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button type="button" id="toggle2" class="input-group-text"><i class="fa fa-calendar-alt"></i></button>
                            </div>
                            <input type="text" asp-for="EndTime" id="datepicker2" class="form-control" />
                        </div>
                        <span asp-validation-for="EndTime" class="text-danger"></span>
                    </div>
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="IsPrivate" /> @Html.DisplayNameFor(model => model.IsPrivate)
                        </label>
                    </div>
                    <input type="hidden" asp-for="IsTeamEvent" />
                    <input type="hidden" asp-for="FkLocation" id="locationId" />
                    <input type="hidden" asp-for="FkGameType" id="gameId" />

                    @if (!(Model == null || Model.FkLocation == null))
                    {
                        foreach (var item in locations)
                        {
                            if (item.LocationId == Model.FkLocation)
                            {
                                <div class="form-group">
                                    <label asp-for="FkLocation" class="control-label"></label>

                                    <input type="text" id="locationAddress" class="form-control" value="@item.Address" readonly />
                                </div>
                                <div class="form-group">
                                    <label asp-for="FkGameType" class="control-label"></label>
                                    <input type="text" id="gameName" value="@item.Game" class="form-control" readonly />
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="form-group">
                            <label asp-for="FkLocation" class="control-label"></label>

                            <input type="text" id="locationAddress" class="form-control" readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="FkGameType" class="control-label"></label>
                            <input type="text" id="gameName" class="form-control" readonly />
                        </div>
                    }

                    <input type="hidden" asp-for="EventId" />
                </div>
                @*<input type="hidden" asp-for="TournamentMember.TournamentMemberId" />*@
                <!-- Modal footer -->
                <div class="modal-footer">
                    <div class="form-group">
                        <input id="btnSave" type="submit" value="Create" class="btn btn-secondary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="align-content-center " id="map"></div>

<script async defer
    src= '@ViewData["GoogleApi"]'>
</script>

<script>
    // Initialize and add the map
    function initMap() {
        var kaunas = { lat: 54.8985, lng: 23.9036 };
        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: 6, center: kaunas });

        //var marker = new google.maps.Marker({ position: kaunas, map: map });
        lmao(map);
    }
    function lmao(map) {
        var locationsObj = @Html.Raw(Json.Serialize(locations));
        var allMarkers = [];
        // Create some markers
        for (var i = 0; i < locationsObj.length; i++) {
            var pos = { lat: locationsObj[i].latitude, lng: locationsObj[i].longitude };
            var marker = new google.maps.Marker({ position: pos, map: map });
            marker.myData = i;
            allMarkers.push(marker);
            let infowindow = new google.maps.InfoWindow({
                content: locationsObj[i].address + '</br>' + '<h4>' + locationsObj[i].game + '</h4>',
                map: map
            });
            marker.addListener('mouseover', function () {
                infowindow.open(map, this);
            });
            marker.addListener('mouseout', function () {
                infowindow.close();
            });
            google.maps.event.addListener(marker, 'click', function (e) {
                var clicked = this;
                $('#locationAddress').val(locationsObj[clicked.myData].address);
                $('#gameName').val(locationsObj[clicked.myData].game);
                $('#gameId').val(locationsObj[clicked.myData].gameId);
                $('#locationId').val(locationsObj[clicked.myData].locationId);


                $('#myModal').modal('show');
            });

        }

        //for (let marker of allMarkers) {
        //marker.addListener('mouseover', function () {
        //    infowindow.open(map, this);
        //});
        //// assuming you also want to hide the infowindow when user mouses-out
        //marker.addListener('mouseout', function () {
        //    infowindow.close();
        //});
    };

</script>

<script>
    $('#datepicker').datetimepicker({
        timepicker: true,
        datepicker: true,
        format: 'Y-m-d H:i',
        hours12: false,
        step: 15,
        onShow: function (ct) {
            this.setOptions({
                minDate: new Date(),
                maxDate: $('#datepicker2').val() ? $('#datepicker2').val() : false
            })
        }
    });
    $('#toggle').on('click', function () {
        $('#datepicker').datetimepicker('toggle')
    });

    $('#datepicker2').datetimepicker({
        timepicker: true,
        datepicker: true,
        format: 'Y-m-d H:i',
        hours12: false,
        step: 15,
        onShow: function (ct) {
            this.setOptions({
                minDate: $('#datepicker').val() ? $('#datepicker').val() : false
            })
        }
    });
    $('#toggle2').on('click', function () {
        $('#datepicker2').datetimepicker('toggle')
    });
</script>

